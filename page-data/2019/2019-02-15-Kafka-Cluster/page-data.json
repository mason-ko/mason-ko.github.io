{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/2019-02-15-Kafka-Cluster/","result":{"data":{"site":{"siteMetadata":{"title":"Mason blog","author":"mason ko","siteUrl":"https://mason-ko.github.io","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"4a9ed87f-167a-5ab1-9952-0ec212c4782f","excerpt":"Docker Compose File docker-compose.yaml Info Kafka Broker 당 zookeeper 1개씩 페어 각 Kafka는 zookeeper를 바라보고 zookeeper 끼리 ZOO_SERVERS 값으로 Cluster 공유","html":"<h2 id=\"docker-compose-file\" style=\"position:relative;\"><a href=\"#docker-compose-file\" aria-label=\"docker compose file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker Compose File</h2>\n<p>docker-compose.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">version: '2.1'\n\nservices:\n  zoo1:\n    image: zookeeper:3.4.9\n    hostname: zoo1\n    ports:\n      - \"2181:2181\"\n    container_name: docker_zoo_1\n    environment:\n        ZOO_MY_ID: 1\n        ZOO_PORT: 2181\n        ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888\n  zoo2:\n    image: zookeeper:3.4.9\n    hostname: zoo2\n    ports:\n      - \"2182:2182\"\n    container_name: docker_zoo_2\n    environment:\n        ZOO_MY_ID: 2\n        ZOO_PORT: 2182\n        ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888\n  zoo3:\n    image: zookeeper:3.4.9\n    hostname: zoo3\n    ports:\n      - \"2183:2183\"\n    container_name: docker_zoo_3\n    environment:\n        ZOO_MY_ID: 3\n        ZOO_PORT: 2183\n        ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888\n\t\t\n  kafka1:\n    image: confluentinc/cp-kafka:5.0.0\n    hostname: kafka1\n    ports:\n      - \"9092:9092\"\n    container_name: docker_kafka_1\n    environment:\n      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-192.168.56.102}:9092\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT\n      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL\n      KAFKA_ZOOKEEPER_CONNECT: \"zoo1:2181\"\n      KAFKA_BROKER_ID: 1\n      KAFKA_LOG4J_LOGGERS: \"kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO\"\n    volumes:\n      - ./zk-single-kafka-multiple/kafka1/data:/var/lib/kafka/data\n    depends_on:\n      - zoo1\n  kafka2:\n    image: confluentinc/cp-kafka:5.0.0\n    hostname: kafka2\n    ports:\n      - \"9093:9093\"\n    container_name: docker_kafka_2\n    environment:\n      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-192.168.56.102}:9093\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT\n      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL\n      KAFKA_ZOOKEEPER_CONNECT: \"zoo2:2182\"\n      KAFKA_BROKER_ID: 2\n      KAFKA_LOG4J_LOGGERS: \"kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO\"\n    volumes:\n      - ./zk-single-kafka-multiple/kafka2/data:/var/lib/kafka/data\n    depends_on:\n      - zoo2\n  kafka3:\n    image: confluentinc/cp-kafka:5.0.0\n    hostname: kafka3\n    ports:\n      - \"9094:9094\"\n    container_name: docker_kafka_3\n    environment:\n      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19094,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-192.168.56.102}:9094\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT\n      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL\n      KAFKA_ZOOKEEPER_CONNECT: \"zoo3:2183\"\n      KAFKA_BROKER_ID: 3\n      KAFKA_LOG4J_LOGGERS: \"kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO\"\n    volumes:\n      - ./zk-single-kafka-multiple/kafka3/data:/var/lib/kafka/data\n    depends_on:\n      - zoo3</code></pre></div>\n<h2 id=\"info\" style=\"position:relative;\"><a href=\"#info\" aria-label=\"info permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Info</h2>\n<p>Kafka Broker 당 zookeeper 1개씩 페어<br>\n각 Kafka는 zookeeper를 바라보고<br>\nzookeeper 끼리 ZOO_SERVERS 값으로 Cluster 공유</p>","frontmatter":{"title":"Kafka Cluster Docker Compose Yaml","date":"February 15, 2019"}}},"pageContext":{"slug":"/2019/2019-02-15-Kafka-Cluster/","previous":{"fields":{"slug":"/2019/2019-01-21-Cassandra-Cluster/"},"frontmatter":{"title":"Cassandra Cluster Docker Compose Yaml"}},"next":{"fields":{"slug":"/2019/2019-03-05-Zeppelin/"},"frontmatter":{"title":"Zeppelin Docker Compose Yaml"}}}},"staticQueryHashes":["2486386679","3128451518"]}