{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/group_context/","result":{"data":{"site":{"siteMetadata":{"title":"Mason blog","author":"mason ko","siteUrl":"https://mason-ko.github.io","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"5e81d83a-dc40-54cb-99ad-1ff319f9a5e8","excerpt":"단일 Context 를 통한 형태로 Context 가 캔슬될때까지 기다릴 시 CancelFunc 실행으로 각각의 고루틴은 종료가 되겠지만 모든 고루틴이 종료될때까지 대기 될수 없음 ( 본문의 ctx.Done 이 바로 통과 ) errgroup context 를 활용하여 모든 context 의 종료를 대기할 수 있음","html":"<h3 id=\"단일-context-를-통한-형태로-context-가-캔슬될때까지-기다릴-시\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9D%BC-context-%EB%A5%BC-%ED%86%B5%ED%95%9C-%ED%98%95%ED%83%9C%EB%A1%9C-context-%EA%B0%80-%EC%BA%94%EC%8A%AC%EB%90%A0%EB%95%8C%EA%B9%8C%EC%A7%80-%EA%B8%B0%EB%8B%A4%EB%A6%B4-%EC%8B%9C\" aria-label=\"단일 context 를 통한 형태로 context 가 캔슬될때까지 기다릴 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단일 Context 를 통한 형태로 Context 가 캔슬될때까지 기다릴 시</h3>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\t\n\tctx<span class=\"token punctuation\">,</span> cf <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">WithCancel</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server \"</span><span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token operator\">&lt;-</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server End\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">cf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token operator\">&lt;-</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Real End!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CancelFunc 실행으로 각각의 고루틴은 종료가 되겠지만 모든 고루틴이 종료될때까지 대기 될수 없음 ( 본문의 ctx.Done 이 바로 통과 )</p>\n<h3 id=\"errgroup-context-를-활용하여-모든-context-의-종료를-대기할-수-있음\" style=\"position:relative;\"><a href=\"#errgroup-context-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%AA%A8%EB%93%A0-context-%EC%9D%98-%EC%A2%85%EB%A3%8C%EB%A5%BC-%EB%8C%80%EA%B8%B0%ED%95%A0-%EC%88%98-%EC%9E%88%EC%9D%8C\" aria-label=\"errgroup context 를 활용하여 모든 context 의 종료를 대기할 수 있음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>errgroup context 를 활용하여 모든 context 의 종료를 대기할 수 있음</h3>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> “golang<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>x<span class=\"token operator\">/</span>sync”\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tctx<span class=\"token punctuation\">,</span> cf <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">WithCancel</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tgroup<span class=\"token punctuation\">,</span> gctx <span class=\"token operator\">:=</span> errgroup<span class=\"token punctuation\">.</span><span class=\"token function\">WithContext</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n\t\tgroup<span class=\"token punctuation\">.</span><span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server \"</span><span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token operator\">&lt;-</span> gctx<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server End\"</span><span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">cf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tgroup<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Real End!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"여러 고루틴에서 Context 가 끝날때 까지 기다리는 방법","date":"July 07, 2021"}}},"pageContext":{"slug":"/2021/group_context/","previous":{"fields":{"slug":"/2021/git_private_repo_access/"},"frontmatter":{"title":"Go Module 에서 접근하는 private git repo 접근 에러 시"}},"next":{"fields":{"slug":"/2021/korean_unicode_mac_problem/"},"frontmatter":{"title":"맥에서 파일 업로드 시 파일명 분리되는 경우 해결책"}}}},"staticQueryHashes":["2486386679","3128451518"]}