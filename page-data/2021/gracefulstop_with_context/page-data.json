{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/gracefulstop_with_context/","result":{"data":{"site":{"siteMetadata":{"title":"Mason blog","author":"mason ko","siteUrl":"https://mason-ko.github.io","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"cbdaafcd-fae9-5115-b31e-a44319aac3ab","excerpt":"개요 단일 프로세스에서, 동기적으로 대기가 필요한 여러개의 서버를 띄운 상태에서 (grpc, subscriber 등) 각 서버 역할을 하는 부분에 정상적으로 종료가 되도록 하기 위함  subscriber 내 비지니스 로직 도중 쿠버네티스 Pod의 교체가 실행이 되어 강제 종료처리 되었을 때 내부 트랜잭션 문제 발생 가능성 있음 처리형태 1. 하위 파생된 모든 컨텍스트에게 정지 요청을 보낼 수 있도록 최상단에서 캔슬이 가능한 컨텍스트, 그룹 컨텍스트, 정지 요청을 보낼 수 있도록 doneChan…","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>단일 프로세스에서, 동기적으로 대기가 필요한 여러개의 서버를 띄운 상태에서 (grpc, subscriber 등)</p>\n<p>각 서버 역할을 하는 부분에 정상적으로 종료가 되도록 하기 위함 </p>\n<ul>\n<li>subscriber 내 비지니스 로직 도중 쿠버네티스 Pod의 교체가 실행이 되어 강제 종료처리 되었을 때<br>\n내부 트랜잭션 문제 발생 가능성 있음</li>\n</ul>\n<h2 id=\"처리형태\" style=\"position:relative;\"><a href=\"#%EC%B2%98%EB%A6%AC%ED%98%95%ED%83%9C\" aria-label=\"처리형태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>처리형태</h2>\n<h4 id=\"1\" style=\"position:relative;\"><a href=\"#1\" aria-label=\"1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.</h4>\n<p>하위 파생된 모든 컨텍스트에게 정지 요청을 보낼 수 있도록 최상단에서 캔슬이 가능한 컨텍스트, 그룹 컨텍스트, 정지 요청을 보낼 수 있도록 doneChan 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">parent<span class=\"token punctuation\">,</span> pCancel <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">WithCancel</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\neg<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> errgroup<span class=\"token punctuation\">.</span><span class=\"token function\">WithContext</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\ndoneChan <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"2\" style=\"position:relative;\"><a href=\"#2\" aria-label=\"2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.</h4>\n<p>Listen 이 필요한 부분이 A,B,C 가 있다고 할 시</p>\n<p>각 부분을 고루틴으로 동시에 띄워 동시에 Listen 함</p>\n<h4 id=\"3\" style=\"position:relative;\"><a href=\"#3\" aria-label=\"3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.</h4>\n<p>각 Server 를 errgroup 을 사용하여 그룹화 된 고루틴을 사용 하며, 사용중인 모듈의 아래 코드와 같이 </p>\n<p>그룹 수 만큼 대기하며, 모든 그룹이 종료될때 까지 wait </p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"golang.org/x/sync/errgroup\"</span>\n\n<span class=\"token comment\">// Wait blocks until all function calls from the Go method have returned, then</span>\n<span class=\"token comment\">// returns the first non-nil error (if any) from them.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>g <span class=\"token operator\">*</span>Group<span class=\"token punctuation\">)</span> <span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\tg<span class=\"token punctuation\">.</span>wg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> g<span class=\"token punctuation\">.</span>cancel <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> g<span class=\"token punctuation\">.</span>err\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Go calls the given function in a new goroutine.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// The first call to return a non-nil error cancels the group; its error will be</span>\n<span class=\"token comment\">// returned by Wait.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>g <span class=\"token operator\">*</span>Group<span class=\"token punctuation\">)</span> <span class=\"token function\">Go</span><span class=\"token punctuation\">(</span>f <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tg<span class=\"token punctuation\">.</span>wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">defer</span> g<span class=\"token punctuation\">.</span>wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\tg<span class=\"token punctuation\">.</span>errOnce<span class=\"token punctuation\">.</span><span class=\"token function\">Do</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tg<span class=\"token punctuation\">.</span>err <span class=\"token operator\">=</span> err\n\t\t\t\t<span class=\"token keyword\">if</span> g<span class=\"token punctuation\">.</span>cancel <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"4\" style=\"position:relative;\"><a href=\"#4\" aria-label=\"4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.</h4>\n<p>리슨 중인 여러 고루틴 중 하나라도 문제가 생겨 서버 종료를 알리기 위해</p>\n<p>doneChan 에 알리며 doneChan 으로 종료됨을 요청 받을 시 최상단에서 생성한 cancel function 을 호출</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">eg<span class=\"token punctuation\">.</span><span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server C Start\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">&lt;-</span>parent<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server C End\"</span><span class=\"token punctuation\">)</span>\n\tdoneChan <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// &lt;&lt;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>doneChan<span class=\"token punctuation\">:</span>\n\t<span class=\"token function\">pCancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"5\" style=\"position:relative;\"><a href=\"#5\" aria-label=\"5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.</h4>\n<p>그룹화 된 고루틴에서의 종료가 아닌, os interrupt 로 인한 정상 정지 프로세스에서도 </p>\n<p>cancel function 을 호출 </p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">interrupt <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> os<span class=\"token punctuation\">.</span>Signal<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nsignal<span class=\"token punctuation\">.</span><span class=\"token function\">Notify</span><span class=\"token punctuation\">(</span>interrupt<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>Interrupt<span class=\"token punctuation\">,</span> syscall<span class=\"token punctuation\">.</span>SIGTERM<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">defer</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>interrupt<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>interrupt<span class=\"token punctuation\">:</span>\n\t<span class=\"token function\">pCancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"6\" style=\"position:relative;\"><a href=\"#6\" aria-label=\"6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.</h4>\n<p>그룹화 된 고루틴에서 모든 서버들이 정상적으로 모두 종료될 수 있도록 </p>\n<p>하단에서 wait</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> eg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"전체코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4%EC%BD%94%EB%93%9C\" aria-label=\"전체코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"golang.org/x/sync/errgroup\"</span>\n\t<span class=\"token string\">\"log\"</span>\n\t<span class=\"token string\">\"os\"</span>\n\t<span class=\"token string\">\"os/signal\"</span>\n\t<span class=\"token string\">\"syscall\"</span>\n\t<span class=\"token string\">\"time\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tparent<span class=\"token punctuation\">,</span> pCancel <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">WithCancel</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\teg<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> errgroup<span class=\"token punctuation\">.</span><span class=\"token function\">WithContext</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n\tdoneChan <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n\teg<span class=\"token punctuation\">.</span><span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server A Start\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;-</span>parent<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// listen</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server A End\"</span><span class=\"token punctuation\">)</span>\n\t\tdoneChan <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\teg<span class=\"token punctuation\">.</span><span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server B Start\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;-</span>parent<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// listen</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server B End\"</span><span class=\"token punctuation\">)</span>\n\t\tdoneChan <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\teg<span class=\"token punctuation\">.</span><span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server C Start\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;-</span>parent<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// listen</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server C End\"</span><span class=\"token punctuation\">)</span>\n\t\tdoneChan <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\tinterrupt <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> os<span class=\"token punctuation\">.</span>Signal<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\tsignal<span class=\"token punctuation\">.</span><span class=\"token function\">Notify</span><span class=\"token punctuation\">(</span>interrupt<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>Interrupt<span class=\"token punctuation\">,</span> syscall<span class=\"token punctuation\">.</span>SIGTERM<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">defer</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>interrupt<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">select</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>doneChan<span class=\"token punctuation\">:</span>\n\t\t<span class=\"token function\">pCancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>interrupt<span class=\"token punctuation\">:</span>\n\t\t<span class=\"token function\">pCancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> eg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---END---\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Server B Start\nServer A Start\nServer C Start\nServer B End\nServer C End\nServer A End\n---END---</code></pre></div>","frontmatter":{"title":"Golang 으로 단일 프로세스에서 여러개의 서버를 띄웠을 시 정상 종료 시키기","date":"December 27, 2021"}}},"pageContext":{"slug":"/2021/gracefulstop_with_context/","previous":{"fields":{"slug":"/2021/gitaction_setnodejs/"},"frontmatter":{"title":"Git Action 에서 node js version 설정"}},"next":{"fields":{"slug":"/2022/go_allocate/"},"frontmatter":{"title":"Golang 할당 효율성"}}}},"staticQueryHashes":["2486386679","3128451518"]}