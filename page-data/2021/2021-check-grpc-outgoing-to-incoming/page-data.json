{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/2021-check-grpc-outgoing-to-incoming/","result":{"data":{"site":{"siteMetadata":{"title":"Mason blog","author":"mason ko","siteUrl":"https://mason-ko.github.io","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"78ee2fe7-4cd3-530c-984a-5e54afea88e0","excerpt":"grpc Metadata Client 에서 NewOutgoingContext 로 metadata 를 넣은 후 Server 에서 FromIncomingContext 로 가져오는 부분에 대한 의문점  https://github.com/grpc/grpc-go/blob/master/Documentation/grpc-metadata.md local test Test Code 단순 로컬 테스트 시 New From 이 동일 키 사용되는데        NewOutgoingContext…","html":"<h2 id=\"grpc-metadata\" style=\"position:relative;\"><a href=\"#grpc-metadata\" aria-label=\"grpc metadata permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>grpc Metadata</h2>\n<p>Client 에서 NewOutgoingContext 로 metadata 를 넣은 후<br>\nServer 에서 FromIncomingContext 로 가져오는 부분에 대한 의문점 </p>\n<p><a href=\"https://github.com/grpc/grpc-go/blob/master/Documentation/grpc-metadata.md\">https://github.com/grpc/grpc-go/blob/master/Documentation/grpc-metadata.md</a></p>\n<h3 id=\"local-test\" style=\"position:relative;\"><a href=\"#local-test\" aria-label=\"local test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>local test</h3>\n<p>Test Code</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">func TestContext(t *testing.T) {\n\tctx := metadata.NewOutgoingContext(context.Background(), metadata.Pairs(\"user_id\", \"ABCD\"))\n\t_, ok := metadata.FromOutgoingContext(ctx)\n\tassert.Equal(t, ok, true)\n\n\tctx = metadata.NewIncomingContext(context.Background(), metadata.Pairs(\"user_id\", \"ABCD\"))\n\t_, ok = metadata.FromIncomingContext(ctx)\n\tassert.Equal(t, ok, true)\n}</code></pre></div>\n<p>단순 로컬 테스트 시 New From 이 동일 키 사용되는데       </p>\n<p>NewOutgoingContext -> FromOutgoingContext<br>\nNewIncomingContext -> FromIncomingContext</p>\n<p>실제로 New Context 하는 과정에서 mdIncomingKey, mdOutgoingKey 각각의 키 값으로 가져오기 때문</p>\n<p>하지만 Network 를 타게 되는 경우</p>\n<p>Outgoing 으로 넣은 후 FromOutgoing 으로 가져올수 없음 ( Incoming 으로 변환 됨 )</p>\n<h3 id=\"추적\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EC%A0%81\" aria-label=\"추적 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추적</h3>\n<p>grpc call 시 http2 protocol 사용 </p>\n<p><a href=\"https://github.com/grpc-ecosystem/go-grpc-middleware/blob/master/tracing/opentracing/server_interceptors.go\">https://github.com/grpc-ecosystem/go-grpc-middleware/blob/master/tracing/opentracing/server_interceptors.go</a></p>\n<p>transport.Stream 에 ctx  incoming key 값으로 반환이 됨</p>\n<p>transport interface 내 HandleStreams(func(*Stream), func(context.Context, string) context.Context)</p>\n<p>실행 과정에서 frame -> MetaHeadersFrame -> state.data.mdata 값으로 NewIncomingContext 를 하여 ctx 를 삽입</p>\n<p>mdata 값은 프레임 값을 추출하여 넣는데 </p>\n<p>http2.HeadersFrame = FrameHeaders: “HEADERS” = 0x1</p>\n<p>outgoing context 로 보낸 Custom Metadata 가 헤더 값에 담겨있는것을 확인</p>\n<hr>\n<h3 id=\"정리하자면\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC%ED%95%98%EC%9E%90%EB%A9%B4\" aria-label=\"정리하자면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리하자면</h3>\n<p>grpc server 내 데이터를 추출 하는 과정에서 Header Frame 에 담겨있는 Custom Metadata 를 IncomingContext 에 담은후 </p>\n<p>내부 rpc function 이 실행 되기에 서버측에서는 FromIncomingContext 사용하여 Context 를 가져와야함 </p>\n<h3 id=\"그렇기-때문에\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A0%87%EA%B8%B0-%EB%95%8C%EB%AC%B8%EC%97%90\" aria-label=\"그렇기 때문에 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그렇기 때문에</h3>\n<p>proto grpc-gateway build 시 생기는 gw.go 을 보면 </p>\n<p>client 입장이 되는 (http mux를 grpc Client와 등록) Register***ServiceHandlerClient 에서는 NewOutgoingContext ( runtime.AnnotateContext ) 에 담아 호출하고</p>\n<p>client에서 server를 붙여 사용하는 (http mux를 grpc server와 등록) Register***ServiceHandlerServer 에서는 NewIncomingContext ( runtime.AnnotateIncomingContext ) 에 담아 호출하게 된다.</p>","frontmatter":{"title":"golang metadata outgoing context 가 incoming 으로 되는 과정","date":"March 17, 2021"}}},"pageContext":{"slug":"/2021/2021-check-grpc-outgoing-to-incoming/","previous":{"fields":{"slug":"/2020/2020-12-16-Custom-Mashaler-gRPC-Gateway/"},"frontmatter":{"title":"gRPC Gateway 를 사용하여 gin 에 띄웠을때 Marshaler 커스텀"}},"next":{"fields":{"slug":"/2021/go_sort/"},"frontmatter":{"title":"Golang sort lib 확인"}}}},"staticQueryHashes":["2486386679","3128451518"]}